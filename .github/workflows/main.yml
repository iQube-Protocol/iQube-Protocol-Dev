name: iQube Protocol CI/CD Pipeline

on:
  push:
    branches: 
      - development
      - staging
      - main
  pull_request:
    branches: 
      - development
      - staging
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - name: Install Dependencies
      run: npm ci
    - name: Run Linter
      run: npm run lint
    - name: Run Unit Tests
      run: npm run test
    - name: Run Type Checks
      run: npm run typecheck

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
    - name: Install Dependencies
      run: npm ci
    - name: Build Project
      run: npm run build
    - name: Archive Build
      uses: actions/upload-artifact@v3
      with:
        name: build
        path: dist

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download Build
      uses: actions/download-artifact@v3
      with:
        name: build
    - name: Deploy to Staging
      env:
        STAGING_SERVER: ${{ secrets.STAGING_SERVER }}
        STAGING_USERNAME: ${{ secrets.STAGING_USERNAME }}
        STAGING_SSH_KEY: ${{ secrets.STAGING_SSH_KEY }}
      run: |
        echo "$STAGING_SSH_KEY" > deploy_key.pem
        chmod 600 deploy_key.pem
        scp -i deploy_key.pem -r ./dist/* $STAGING_USERNAME@$STAGING_SERVER:/var/www/staging.iqube.com/

  deploy-production:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download Build
      uses: actions/download-artifact@v3
      with:
        name: build
    - name: Deploy to Production
      env:
        PROD_SERVER: ${{ secrets.PROD_SERVER }}
        PROD_USERNAME: ${{ secrets.PROD_USERNAME }}
        PROD_SSH_KEY: ${{ secrets.PROD_SSH_KEY }}
      run: |
        echo "$PROD_SSH_KEY" > deploy_key.pem
        chmod 600 deploy_key.pem
        scp -i deploy_key.pem -r ./dist/* $PROD_USERNAME@$PROD_SERVER:/var/www/iqube.com/
